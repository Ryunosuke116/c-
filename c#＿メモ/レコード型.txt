レコード型
c#9.0(2020年)
不変オブジェクトやデータの格納に便利な型です。
また、通常クラスに似ているが、レコード型は主にデータの保持や比較に使われます。

特徴：
1，値の比較
レコード型のインスタンス同士を比較する際、同じデータを持っていれば等しいとみなされます。
通常クラスでは、オブジェクトの参照が同じ場合のみ等しいとみなされます。
2,イミュータブル性
レコード型はデフォルトで不変です。つまり、作成後はプロパティの値を変更できないように設計されています。
ただ、必要に応じて変更可能なプロパティを追加することも可能ですが、基本的には変更不可で設計されています。
3，簡潔なシンタックス
レコード型を定義するとき、フィールドやプロパティ

構造体とインターフェース
※インターフェース：ふるまいの入り口を整理するための約束事
共通ルールを守りつつ、そのクラスで具体的な振る舞いを自由に作ることができます。

メリット：
1、多態性の実現
2，構造体によるパフォーマンスの向上
3、軽量なデータ構造の定義
